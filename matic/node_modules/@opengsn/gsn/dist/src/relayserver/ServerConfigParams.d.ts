export interface ServerConfigParams {
    baseRelayFee: number;
    pctRelayFee: number;
    url: string;
    port: number;
    versionRegistryAddress: string;
    versionRegistryDelayPeriod?: number;
    relayHubId?: string;
    relayHubAddress: string;
    gasPricePercent: number;
    ethereumNodeUrl: string;
    workdir: string;
    devMode: boolean;
    debug: boolean;
    registrationBlockRate: number;
    maxAcceptanceBudget: number;
    alertedBlockDelay: number;
    workerMinBalance: number;
    workerTargetBalance: number;
    managerMinBalance: number;
    managerTargetBalance: number;
    minHubWithdrawalBalance: number;
}
export declare function filterType(config: any, type: string): any;
export declare function entriesToObj(entries: any[]): any;
export declare function filterMembers(env: any, config: any): any;
/**
 * initialize each parameter from commandline, env or config file (in that order)
 * config file must be provided either as command-line or env (obviously, not in
 * the config file..)
 */
export declare function parseServerConfig(args: string[], env: any): any;
export declare function resolveServerConfig(config: Partial<ServerConfigParams>, web3provider: any): Promise<Partial<ServerConfigParams>>;
